# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# Tên file: .github/workflows/node.js.yml (GitHub tự động đặt tên, bạn có thể đổi)

name: Node.js CI Build # Tên của workflow

on:
  push:
    branches: [ "main" ] # Chạy khi push lên nhánh main
  pull_request:
    branches: [ "main" ] # Chạy khi có PR vào nhánh main

jobs:
  build:
    runs-on: ubuntu-latest # Sử dụng máy ảo Ubuntu

    strategy:
      matrix:
        node-version: [18.x] # Chỉ định phiên bản Node.js (nên khớp với dự án)

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    # --- Thay đổi từ đây ---
    - name: Setup pnpm # 1. Cài đặt pnpm
      uses: pnpm/action-setup@v3
      with:
        version: latest # Hoặc chỉ định phiên bản pnpm trong package.json

    - name: Install dependencies # 2. Cài đặt dependencies bằng pnpm
      run: pnpm install --frozen-lockfile

    - name: Generate Prisma Client # 3. Tạo Prisma Client
      run: npx prisma generate
      env:
        # Cung cấp URL giả lập nếu generate không cần DB thật, nếu cần thì dùng secrets
        DATABASE_URL: ${{ secrets.DATABASE_URL_DUMMY || 'postgresql://user:pass@host:port/db?schema=public' }}

    # - name: Run Linter (Optional) # 4. (Tùy chọn) Chạy Linter
    #   run: pnpm run lint # Bỏ comment nếu có script "lint"

    # - name: Run Tests (Optional) # 5. (Tùy chọn) Chạy Tests
    #   run: pnpm run test # Bỏ comment nếu có script "test"
    #   env:
    #     DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }} # Cần secrets nếu test dùng DB
    #     JWT_SECRET: ${{ secrets.JWT_SECRET }}
    # --- Kết thúc thay đổi ---
